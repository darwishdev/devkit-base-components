import{_ as e,c as i,o as a,ae as n}from"./chunks/framework.Dh1jimFm.js";const g=JSON.parse('{"title":"Welcome to Devkit Base Components","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),t={name:"index.md"};function l(o,s,r,p,h,c){return a(),i("div",null,s[0]||(s[0]=[n(`<h1 id="welcome-to-devkit-base-components" tabindex="-1">Welcome to Devkit Base Components <a class="header-anchor" href="#welcome-to-devkit-base-components" aria-label="Permalink to &quot;Welcome to Devkit Base Components&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Devkit Base Components is a collection of reusable and customizable UI components designed to speed up front-end development. These components are built on top of popular libraries and frameworks like <strong>PrimeVue</strong>, <strong>TailwindCSS</strong>, and <strong>Vue I18n</strong>, ensuring easy integration into your projects. The library is designed to solve common UI problems while providing flexibility, performance, and scalability. The components assume real-life use cases, where an <strong>apiClient</strong> is commonly used to interact with your backend.</p><h2 id="what-it-solves" tabindex="-1">What It Solves <a class="header-anchor" href="#what-it-solves" aria-label="Permalink to &quot;What It Solves&quot;">​</a></h2><p>With the growing need for modern, scalable, and maintainable front-end applications, <code>devkit-base-components</code> provides the following solutions:</p><ul><li><strong>Component Reusability</strong>: Save time by using pre-built, customizable components.</li><li><strong>Icon Handling</strong>: Automatically fetch and manage icons using our smart icon handler, which optimizes API calls and reduces network overhead.</li><li><strong>Caching</strong>: We use <strong>Dexie.js</strong> to cache icons locally, ensuring faster load times and avoiding repeated API requests.</li><li><strong>Localization</strong>: Seamlessly handle translations with <strong>Vue I18n</strong>, allowing you to set up and manage different locales in your app with ease.</li><li><strong>Theme Toggling</strong>: Easily switch between light and dark themes with a theme toggle, fully compatible with <strong>TailwindCSS</strong>.</li><li><strong>Locale Switching</strong>: A built-in <strong>Locale Toggler</strong> allows users to switch between languages dynamically, improving accessibility for global users.</li><li><strong>Flexible Image Handling</strong>: Effortlessly manage image fetching with base URLs and callback URLs, giving you control over your media assets.</li><li><strong>Real-life Use Cases</strong>: These components are designed to be used in real-life applications, where the user will typically integrate them with an <strong>apiClient</strong> to handle API requests, ensuring that they work seamlessly with your backend.</li></ul><h2 id="based-on-primevue-tailwindcss-and-vue-i18n" tabindex="-1">Based on PrimeVue, TailwindCSS, and Vue I18n <a class="header-anchor" href="#based-on-primevue-tailwindcss-and-vue-i18n" aria-label="Permalink to &quot;Based on PrimeVue, TailwindCSS, and Vue I18n&quot;">​</a></h2><p>Our components are built on top of widely used libraries:</p><ul><li><strong>PrimeVue</strong> for ready-to-use, customizable UI components.</li><li><strong>TailwindCSS</strong> for utility-first, responsive, and highly customizable styles.</li><li><strong>Vue I18n</strong> for handling translations, so you can easily localize your app in different languages.</li></ul><h3 id="key-features" tabindex="-1">Key Features: <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features:&quot;">​</a></h3><ul><li><strong>Themetoggle</strong>: A simple solution to toggle between light and dark themes.</li><li><strong>Localetoggler</strong>: A convenient way to switch languages for your users.</li><li><strong>Setting up Translations</strong>: Easily configure your app for multi-language support.</li><li><strong>Navigation Bars</strong>: Pre-built navigation components ready for customization.</li><li><strong>Image Handling</strong>: Manage base and callback URLs for images efficiently.</li><li><strong>Real-life Integration</strong>: Designed for real-world applications where you can seamlessly integrate these components with an <code>apiClient</code> to handle backend interactions.</li></ul><h2 id="installation-instructions" tabindex="-1">Installation Instructions <a class="header-anchor" href="#installation-instructions" aria-label="Permalink to &quot;Installation Instructions&quot;">​</a></h2><p>To get started, install the package with either npm or yarn:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devkit-base-components</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devkit-base-components</span></span></code></pre></div><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><p>Here&#39;s a quick example of how to use the <code>Button</code> component:</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Click Me&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pi pi-check&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Button } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;devkit-base-components&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>In this example, you can quickly get started by importing the component and using it in your app.</p><h3 id="icon-handling-caching" tabindex="-1">Icon Handling &amp; Caching <a class="header-anchor" href="#icon-handling-caching" aria-label="Permalink to &quot;Icon Handling &amp; Caching&quot;">​</a></h3><p>Our icon handler makes it easy to fetch icons dynamically while reducing the number of API requests. Icons are cached using <strong>Dexie.js</strong>, a fast and simple JavaScript database, ensuring that once an icon is fetched, it is stored locally for future use, reducing load times and improving performance.</p><h2 id="fully-compatible-with-all-projects" tabindex="-1">Fully Compatible with All Projects <a class="header-anchor" href="#fully-compatible-with-all-projects" aria-label="Permalink to &quot;Fully Compatible with All Projects&quot;">​</a></h2><p><code>devkit-base-components</code> is a versatile library that can be used in any front-end project. Whether you’re working on a small app or a large-scale enterprise solution, these components are designed to integrate seamlessly with your existing setup. The flexible architecture and built-in support for <strong>Vue I18n</strong>, <strong>TailwindCSS</strong>, and <strong>PrimeVue</strong> make it a perfect choice for projects of all sizes.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>### Key Updates:</span></span>
<span class="line"><span>- **Real-life Use Cases**: Added a section mentioning that the components are designed for real-life use cases, assuming the user will typically integrate them with an \`apiClient\` for backend interactions.</span></span>
<span class="line"><span>- This emphasizes that the components are practical and production-ready for modern web applications, ensuring seamless integration with backend services.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Let me know if this works or if you need further adjustments!</span></span></code></pre></div>`,23)]))}const u=e(t,[["render",l]]);export{g as __pageData,u as default};
